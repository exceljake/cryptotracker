exit
cryptocurrency_params
exit
cc
cc.id = User.first.id
cc = Cryptocurrency.create(symbol: "BTC") 
params
cryptocurrency_params
exit
params[:cryptocurrency][:symbol].downcase
(params[:cryptocurrency][:symbol]).downcase
(params[:cryptocurrency][:symbol])
Cryptocurrency.find_by(symbol: params[:cryptocurrency][:symbol])
render json: Cryptocurrency.find_by(symbol: params[:cryptocurrency][:symbol])
Cryptocurrency.find_by(symbol: params[:cryptocurrency][:symbol]).nil?
exit
(params[:cryptocurrency][:total_worth])
(params[:cryptocurrency][:quantity])
(params[:cryptocurrency][:buy_price])
cryptocurrency['id']
price(cryptocurrency['id'])
cryptocurrency['symbol']
symbol: cryptocurrency['symbol']
cryptocurrency = search(params[:cryptocurrency][:symbol])
params
exit
:symbol => 'tether'
:symbol => cryptocurrency['symbol']
cryptocurrency = search(params[:cryptocurrency][:symbol])
:symbol => cryptocurrency['symbol']
exit
Cryptocurrency.all
cryptocurrency['symbol'] == (params[:cryptocurrency][:symbol])
Cryptocurrency.find_by(symbol: (params[:cryptocurrency][:symbol]))
cryptocurrency = search(params[:cryptocurrency][:symbol])
exit
Cryptocurrency.find_by(symbol: (params[:cryptocurrency][:symbol]))
cryptocurrency['symbol'] == (params[:cryptocurrency][:symbol])
cryptocurrency['id']
price(cryptocurrency['id'])
cryptocurrency['symbol']
cryptocurrency = search(params[:cryptocurrency][:symbol])
cryptocurrency['id']
coingecko_id: cryptocurrency['id']
exit
cryptocurrency['symbol']
cryptocurrency['symbol'].downcase
price(cryptocurrency['id'])
cryptocurrency['id']
coingecko_id: cryptocurrency['id']
exit
Cryptocurrency
price(cryptocurrency['id'])
cryptocurrency['symbol']
cryptocurrency = search(params[:cryptocurrency][:symbol])
exit
url = "#{COINGECKO_URL}/simple/price?ids=#{name}&vs_currencies=usd"
exit
cryptocurrency = search(params[:cryptocurrency][:symbol])
current_price
exit
cryptocurrency['symbol'].downcase
(params[:cryptocurrency][:symbol])
cryptocurrency['symbol']
cryptocurrency['symbol'].downcase == (params[:cryptocurrency][:symbol])
 cryptocurrency = search(params[:cryptocurrency][:symbol])
exit
url = "#{COINGECKO_URL}/search?query=#{query}"
exit
url
url = "#{COINGECKO_URL}/search?query=#{query}"
exit
cryptocurrency = search(params[:symbol])
params
params['symbol']
params[:symbol]
cryptocurrency['symbol'].downcase
cryptocurrency['symbol']
cryptocurrency['symbol'].downcase == params[:symbol]
cryptocurrency = search(params[:symbol])
        )
          coingecko_id: cryptocurrency['id'],
          price: price(cryptocurrency['id']),
          symbol: cryptocurrency['symbol'].downcase,
        Cryptocurrency.create(
current_price =
cryptocurrency
params
current_price
exit
current_price
cryptocurrency
cryptocurrency = search(params[:symbol])
JSON.parse(RestClient.get(url).body)['coins'].first
params
exit
set_cryptocurrency
exit
set_cryptocurrency
cryptocurrency_params
cryptocurrency_paras
exit
current_user.id
current_user
exit
current_user
exit
current_user.client
current_user.uid
current_user.access-token
current_user.access_token
current_user
@wallet.save
@wallet.user_id = current_user.id
current_user = User.first
current_user = 
current_user
@wallet = Wallet.new(wallet_params)
wallet_params
exit
exit 
@wallet
@wallet.save
@wallet = Wallet.new(wallet_params)
exit 
wallet_params
exit
params
wallet_params
exit
request
params
wallet_params
exit
params["wallet"]
params
wallet_params
exit
params
wallet_params
exit 
params
wallet_params
exit
params
wallet_params
exit
params
wallet_params
exit
params
wallet_params
